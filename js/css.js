var css1 = {"\
	<h1>Внешний отступ</h1>\
	":"\
	<h4>margin: [значение | проценты | auto] {1,4} | inherit</h4>\
	<p>Число параметров:<br>\
		2 margin: top-bottom left-right;<br>\
		3 margin: top left-right bottom;<br>\
		4 margin: top left right bottom;\
	</p>\
	<h5>Особенности</h5>\
	<p>\
		Схлопывание внешних соседних отступов margin.<br>\Выпадение из родительского элемента дочернего margin-top.\</p>","\
	<h1>Внутренний отступ</h1>":"\
	<h4>padding: [значение | проценты | auto] {1,4} | inherit</h4>\
	<p>Число параметров:<br>\
		2 padding: top-bottom left-right;<br>\
		3 padding: top left-right bottom;<br>\
		4 padding: top left right bottom;\
	</p>",
	
	"\
	<h1>Рамка:</h1>\
	":"\
	<h4>border: [border-width || border-style || border-color] | inherit</h4>\
	<h5>border-width</h5>\
	<p>определяет толщину границы</p>\
	<h5>border-style</h5>\
	<p>определяет стиль границы</p>\
	<h6>Стили:</h6>\
	<p>hidden - Эквивалентно none.<br>\
			dotted - точечная рамка	<br>\
			dashed - пунктирная рамка<br>\
			solid	- сплошная рамка<br>\
			double - 	двойная рамка<br>\
			groove - внешняя тень на рамне<br>\
			ridge - внутренняя тень на рамке<br>\
			inset	- вогнутая рамка рамки<br>\
			outset - выгнутая рамка<br>\
			{1,4}	- Одновременное перечисление четырех разных стилей для рамок элемента, только для свойства border-style.\
	</p>\
	<h5>border-color</h5>\
	<p>цвет рамки</p>",
	
	"\
	<h1>Изменение блочной модели</h1>":"\
	<h4>box-sizing: content-box;(def)</h4>\
	<p>Основывается на стандартах CSS, при этом свойства width и height задают ширину и высоту контента и не включают в себя значения отступов, полей и границ.</p>\
	<h4>box-sizing: border-box;</h4>\
	<p>Свойства width и height включают в себя значения полей и границ, но не отступов (margin).</p>","\
	<h1>Позиционирование</h1>":"\
	<h4>position: static | relative | fixed | absolute | sticky; - позиционирование </h4>\
	<p>static - отображается обычно \
			relative - занимает место, сдвигается относительно своей позиции top, right, bottom, left<br>\
			fixed - не занимает место, фиксируется на экране top, right, bottom, left<br>\
			absolute - не занимает место, сдвигается относительно тела документа top, right, bottom, left<br>\
			sticky - прилипает к границе вьюпорта при достижении этой границы при скролле, top, right, bottom, left\
	</p>\
	<h4>z-index: #; - чем больше, тем выше располагается блок среди своих спозиционированных братьев.</h4>\
	<h5>Особенности:</h5>\
	<p>Элемент с нестандартным позиционированием позиционируется относительно ближайшего родительского элемента с нестандартным позиционированием.</p>",
	
	"\
	<h1>2D - Трансформации</h1>":"\
	<h4>transform-origin: x [y]; </h4>\
	<p>задаёт точку отсчёта системы координат</p>\
	<h4>transform: translate(x [,y]);</h4>\
	<p>перемещение по горизонтали, по вертикали</p>\
	<h4>transform: scale(x [,y]);</h4>\
	<p>масштаб объекта</p>\
	<h4>transform: rotate(#deg);</h4>\
	<p>угол вращения</p>\
	<h4>transform: skew(x [,y]);</h4>\
	<p>скос объекта</p>\
	<h4>transform: matrix(#);</h4>\
	<p>двухмерная матрица преобразований (THE MATRIX RESOLUTIONS)</p>",
	
	"\
	<h1>Свойства шрифтов</h1>":"\
	<h4>font-size: size;</h4>\
	<p>размер текста </p>\
	<h4>font-weight: normal | bold | 1h-9h;</h4>\
	<p>жирность текста</p>\
	<h4>font-style: normal | italic;</h4>\
	<p>курсив </p>\
	<h4>font-variant: normal | small-caps; </h4>\
	<p>капитель</p>\
	<h4>font-family: serif | sans | monospace | fantasy | cursive; </h4>\
	<p>семейство шрифтов</p>",
	
	"\
	<h1>Свойства редактирования текста</h1>":"\
	<h4>color: #color; </h4>\
	<p>цвет текста</p>\
	<h4>text-decoration: none | under-line | overline | line-through;</h4>\
	<p>подчёркивание</p>\
	<h4>text-transform: none | lowercase | uppercase | capitalize;</h4>\
	<p>регистр символов</p>\
	<h4>white-space: normal | nowrap | pre | pre-wrap; </h4>\
	<p>отображение пробелов</p>\
	<h4>text-align: left | center | right | justify; </h4>\
	<p>горизонтальное выравнивание</p>\
	<h4>vertical-align: top | middle | bottom | baseline | sub | super; </h4>\
	<p>вертикальное</p>\
	<h4>line-height: size; </h4>\
	<p>высота символов </p>\
	<h4>text-indent: size; </h4>\
	<p>отступ первой строки</p>\
	<h4>word-spacing: normal | size; </h4>\
	<p>расстояние между словами</p>\
	<h4>letter-spacing: normal | size; </h4>\
	<p>расстояние между буквами</p>\
	<h4>text-overflow: clip | ellipsis; </h4>\
	<p>обрезается по контейнеру | обрывается многоточием</p>\
	<h4>direction: ltr | rtl; </h4>\
	<p>слева направо, справа налево</p>",
	
	"\
	<h1>Подключение шрифтов</h1>":"\
	<h4>@font-face{</h4>\
	<h5>font-family: 'Название Шрифта';</h5>\
	<h5>src: local('Название шрифта'),  </h5>\
	<p>если у пользователей есть этот шрифт на компе</p>\
	<h5>url('Шрифт.eot?') format(eot),   </h5>\
	<p>IE8+, знак ? обходит баг в обработчике значения src</p>\
	<h5>url('Шрифт.woff') format(woff),</h5>\
	<p>все современные браузеры, IE9+  </p>\
	<h5>url('Шрифт.ttf') format(truetype);</h5>\
	<p>все современные браузеры</p>\
	<p>// ниже идут остальные настройки шрифта</p>\
	<h4>}</h4>",
	
	"\
	<h1>Декоративные элементы</h1>":"\
	<h4>box-shadow: [inset] x y blur size color; </h4>\
	<p>тень блока</p>\
	<h4>text-shadow: x y blur color; </h4>\
	<p>тень текста (применима к SVG) <br></p>\
	<h4>filter: #; </h4>\
	<p>фильтр цвета <br></p>\
	<h5>brightness(#); </h5>\
	<p>яркость</p>\
	<h5>contrast(#); </h5>\
	<p>контраст</p>\
	<h5>grayscale(#); </h5>\
	<p>бесцветность</p>\
	<h5>sepia(#); </h5>\
	<p>сепия</p>\
	<h5>invert(#); </h5>\
	<p>инверсия</p>\
	<h5>saturate(#); </h5>\
	<p>насыщенность</p>\
	<h5>hue-rotate(#); </h5>\
	<p>поворот цвета</p>\
	<h5>blur(#); </h5>\
	<p>размытие</p>\
	<h5>opacity(#); </h5>\
	<p>прозрачность</p>\
	<h5>drop-shadow(#); </h5>\
	<p>тень (быстрее, тень на элемент) <br>\</p>\
	<h4>overflow: #; </h4>\
	<p>отображение детей за пределами родителя<br>\
		auto — прокрутка добавляется лишь при необходимости<br>\
		hidden — отображает лишь внутренности<br>\
		scroll — всегда добавляет полосы прокрутки<br>\
		visible — отображает всё<br>\
		inherit — наследует свойство родителя<br>\
	</p>",
	
	"\
	<h1>Бекграунд</h1>":"\
	<h4>background: [bc] [bi] [br] [bp] [ba]; </h4>\
	<p>основной синтаксис задания</p>\
	<p>1 -color: color; - цвет</p>\
	<p>2 -image: url('path'); - ссылка на картинку</p>\
	<p>3 -repeat: repeat | repeat-x | repeat-y | no-repeat | round | space; - повторение</p>\
	<p>4 -position: x[,y]; - позиционирование</p>\
	<p>5 -attachment: scroll | fixed; - прокрутка фона</p>\
	<p>6 -size: x[,y]; - размер элемента<br>\
		auto - Если задано одновременно для ширины и высоты (auto auto), <br>\
						размеры фона остаются исходными; если только для одной <br>\
					стороны картинки (100px auto), то размер вычисляется <br>\
						автоматически исходя из пропорций картинки.<br>\
		cover - Масштабирует изображение с сохранением пропорций так, чтобы его ширина или высота<br>\
						равнялась ширине или высоте блока.<br>\
		contain - Масштабирует изображение с сохранением пропорций таким образом, <br>\
							чтобы картинка целиком поместилась внутрь блока.<br>\
	</p>\
	<p>7 -origin: padding-box | border-box | content-box – границы фона</p>\
	<p>8 -clip: padding-box | border-box | content-box – обрезка фона</p>\
	<p>9 - border; - внешняя рамка</p>\
	<h5>border: width style color radius; - создание рамки </h5>\
	<p>width - ширина, style - стиль, color - цвет(transparent-прозрачный), radius - скругление углов</p>\
	<h5>border-image: #; - изображение рамки</h5>\
	<p>-source: #;- задаёт путь к изображению, по умолчанию заполняются лишь углы</p>\
	<p>-slice: #;- задаёт параметры изображения рамки, указываются значения [top, right, bottom, left]</p>\
	<p>-repeat: #;- задаёт способ заполнения боковых рамок элемента [stretch, repeat, space, round]</p>\
	<p>-width: #;- управляет шириной видимой области рамки-картинки, масштабирует её</p>\
	<p>-outset: #; - отодвигает рамку за пределы элемента, масштабируя её</p>",
	
	"\
	<h1>Базовые селекторы</h1>":"\
	<h4>* </h4>\
	<p>выбирает каждый элемент</p>\
	<h4>#x </h4>\
	<p>выбирает по id</p>\
	<h4>. </h4>\
	<p>выбирает по классу</p>\
	<h4>X </h4>\
	<p>выбирает по тегу</p>\
	<h4>x.y </h4>\
	<p>выбирает по классу тега</p>\
	<h4>x y </h4>\
	<p>выбирает все y в х</p>\
	<h4>x, y </h4>\
	<p>выбирает несколько элов</p>\
	<h4>x > y </h4>\
	<p>выбирает прямых потомков</p>\
	<h4>x + y </h4>\
	<p>выбирает один следующий элемент y</p>\
	<h4>x ~ y </h4>\
	<p>выбирает все следующие элементы y</p>",
	
	"\
	<h1>Псевдоселекторы детей</h1>":"\
	<h4>:first-child </h4>\
	<p>выбирает эл, если он первый из себе подобных</p>\
	<h4>:only-child </h4>\
	<p>выбирает эл, если он единственный потомок</p>\
	<h4>:last-child </h4>\
	<p>выбирает эл, если он последний из себе подобных</p>\
	<h4>:nth-child(n) </h4>\
	<p>выбирает элы, согласно регулярному выражению</p>\
	<h4>:nth-last-child(n) </h4>\
	<p>выбирает элы, согласно регулярному выражению с конца</p>\
	<h4>:first-of-type </h4>\
	<p>выбирает первый дочерний эл по типу родителя</p>\
	<h4>:nth-of-type(n) </h4>\
	<p>выбирает элы, согласно регулярному выражению, по их типу</p>\
	<h4>:nth-of-type(n+A) </h4>\
	<p>выбирает элы, согласно регулярному выражению, по их типу, начиная с +А</p>\
	<h4>:only-of-type </h4>\
	<p>выбирает эл, если он единственный по типу в родителе</p>\
	<h4>:last-of-type </h4>\
	<p>выбирает эл, если он последний своего типа в родителе</p>\
	<h4>:empty </h4>\
	<p>выбирает элы без дочерних элов</p>\
	<h4>:not(x) </h4>\
	<p>выбирает элы, не соответствующие х</p>",
	
	"\
	<h1>Селекторы по атрибутам</h1>":"\
	<h4>[attribute] </h4>\
	<p>выбирает элы, у которых есть конкретных атрибут</p>\
	<h4>x[attribute] </h4>\
	<p>выбирает конкретные элы, у которых есть конкретный атрибут</p>\
	<h4>[attribute='value'] </h4>\
	<p>выбирает элы, имеющие определённое значение атрибута</p>\
	<h4>[attribute^='value'] </h4>\
	<p>выбирает элы, значение атрибута которых начинает с опред. символов</p>\
	<h4>[attribute$='value'] </h4>\
	<p>выбирает элы, значение атрибута которых заканчивается на опред. символы</p>\
	<h4>[attribute*='value'] </h4>\
	<p>выбирает элы, значение атрибута которых имеет в себе опред. символы</p>",
	
	"\
	<h1>Селекторы по псевдоэлементам</h1>":"\
	<h4>x:visited </h4>\
	<p>выбирает посещённые ссылки</p>\
	<h4>x:link </h4>\
	<p>выбирает не посещённые ссылки</p>\
	<h4>x:active </h4>\
	<p>выбирает элемент в момент активации</p>\
	<h4>x:hover </h4>\
	<p>выбирает элемент при наведении на него курсором</p>\
	<h4>x:focus </h4>\
	<p>выбирает элемент input в фокусе</p>\
	<h4>x:lang(lang) </h4>\
	<p>выбирает элементы lang которые начинаются со значения в скобках</p>\
	<h4>x:root </h4>\
	<p>выбирает корневой элемент документа</p>\
	<h4>x:target </h4>\
	<p>выбирает элемент, к которому был совершён переход по ссылке (целевой)</p>\
	<h4>x:enabled </h4>\
	<p>выбирает каждый включённый элемент input </p>\
	<h4>x:disabled </h4>\
	<p>выбирает каждый выключенный элемент input </p>\
	<h4>x:checked </h4>\
	<p>выбирает выбранный по умолчанию пользователем элемент input с checked <br></p>\
	<h4>::first-letter </h4>\
	<p>выбирает первую букву эла</p>\
	<h4>::first-line </h4>\
	<p>выбирает первую строку эла</p>\
	<h4>::before </h4>\
	<p>добавляет новый элемент перед содержимым элемента, к которому применяется</p>\
	<h4>::after </h4>\
	<p>добавляет новый элемент после содержимого элемента, к которому применяется</p>\
	<h4>::selection </h4>\
	<p>стилизует текст, выделенный курсором </p>",
	
	"\
	<h1>Анимированные переходы по состояниям</h1>":"\
	<h4>trasition-duration: #; </h4>\
	<p>длительность перехода</p>\
	<h4>transition-property: #; </h4>\
	<p>какие свойства изменять плавно</p>\
	<h4>transition-delay: #; </h4>\
	<p>задержка перехода</p>\
	<h4>transition-timing-function: #; </h4>\
	<p>тайминговая функция </p>\
	<p>(linear, ease-in, ease-out, ease-in-out, steps)</p>\
	<h4>cubic-bezier(0, 0, 0, 0); </h4>\
	<p>тайминговая функция с помощью кривых Безье.</p>",
	
	"\
	<h1>Анимация</h1>":"\
	<h4>@keyframes name {</h4>\
	<h5>0% { width: 100px; } – ключевые кадры</h5>\
	<h5>50% { width: 150px; }</h5>\
	<h5>100% { width: 200px; }</h5>\
	<h4>}</h4>\
	<h4>.button {</h4>\
	<h5>animation-name: name; - имя анимации</h5>\
	<h5>animation-duration: 1s; - длительность</h5>\
	<h4>} <br></h4>\
	<h4>animation-iteration-count: # | infinite; </h4>\
	<p>количество проигрываний анимации</p>\
	<h4>animation-direction: #; </h4>\
	<p>направление анимации<br>\
						normal - нормальное<br>\
					reverse - обратное(alternate –rev.)<br>\
	</p>\
	<h4>animation-delay: #; </h4>\
	<p>задержка</p>\
	<h4>animation-fill-mode: #; </h4>\
	<p>состояние анимации <br>\
					forwards - сохраняет в конце<br>\
					backwards - устанавливает в начале<br>\
					both - объединяет<br>\
	</p>\
	<h4>animation-play-state: #; </h4>\
	<p>запуск анимации<br>\
					running - запускает анимацию (по умолч.)<br>\
					paused - ставит на паузу<br>\
	</p>\
	<h4>animation-timing-function: #; </h4>\
	<p>тайминговая функция анимации<br>\
					# - число шагов<br>\
					steps(count, to) - направление (start / end)<br>\
	</p>"
};
